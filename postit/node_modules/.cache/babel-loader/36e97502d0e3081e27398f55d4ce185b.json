{"ast":null,"code":"var _jsxFileName = \"/home/royce/Workspace/Repositories/Projects/react-flask-rest-crud-sample/postit/src/components/postform.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from \"react-hook-form\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\nexport default function PostForm() {\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(JSON.stringify(data));\n    fetch('http://localhost:5000/postslist', {\n      mode: 'no-cors',\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"multipart/form-data\",\n        \"Accept\": \"application/json\",\n        \"type\": \"formData\"\n      },\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      textAlign: 'center'\n    },\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Post your messages here\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    inputRef: register({\n      required: true\n    }),\n    id: \"filled-textarea\",\n    label: \"Title\",\n    placeholder: \"Put your title here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 52\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    inputRef: register({\n      required: true\n    }),\n    id: \"filled-textarea\",\n    label: \"Message\",\n    placeholder: \"Put your message here\",\n    rows: 4,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 52\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Post Message\"))));\n}","map":{"version":3,"sources":["/home/royce/Workspace/Repositories/Projects/react-flask-rest-crud-sample/postit/src/components/postform.js"],"names":["React","useState","makeStyles","Typography","Button","TextField","useForm","useStyles","theme","root","flexGrow","PostForm","classes","register","handleSubmit","watch","errors","onSubmit","data","console","log","JSON","stringify","fetch","mode","method","headers","body","then","response","json","padding","textAlign","required","exampleRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n}));\n\n\nexport default function PostForm() {\n        const classes = useStyles();\n\n        const { register, handleSubmit, watch, errors } = useForm();\n        const onSubmit = data => {\n            console.log(data);\n            console.log(JSON.stringify(data));\n            fetch('http://localhost:5000/postslist', {\n                mode: 'no-cors',\n                method: 'POST',\n                headers: {\n                    \"Content-type\": \"multipart/form-data\",\n                    \"Accept\": \"application/json\",\n                    \"type\": \"formData\"\n                },\n                body: JSON.stringify(data)\n            }).then(function(response) {\n                return response.json();\n            }).then(function(data) {\n                console.log(data);\n            });\n        };\n\n        return (\n            <div style={{padding:20}}>\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <Typography variant=\"h6\"  style={{textAlign: 'center'}} gutterBottom>\n                        Post your messages here\n                    </Typography>\n                    <p>\n                        <TextField\n                            name=\"title\"\n                            inputRef={register({required: true})}\n                            id=\"filled-textarea\"\n                            label=\"Title\"\n                            placeholder=\"Put your title here\"\n                        />\n                        {errors.exampleRequired && <span>This field is required</span>}\n                    </p>\n                    <p>\n                        <TextField\n                            name=\"message\"\n                            inputRef={register({required: true})}\n                            id=\"filled-textarea\"\n                            label=\"Message\"\n                            placeholder=\"Put your message here\"\n                            rows={4}\n                            multiline\n                        />\n                        {errors.exampleRequired && <span>This field is required</span>}\n                    </p>\n                    <p>\n                        <Button type=\"submit\" fullWidth={true} variant=\"outlined\" color=\"primary\">Post Message</Button>\n                    </p>\n            </form>\n            </div>\n        );\n}"]},"metadata":{},"sourceType":"module"}